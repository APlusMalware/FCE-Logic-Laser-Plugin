using System;

namespace APlusMalware.LogicLaserPlugin
{
    public class LogicThreatSensor : LogicSensor
    {
        public enum SensorMode { Countdown, ThreatLevel }

        private readonly SensorMode _mode;

        public LogicThreatSensor(Segment segment, Int64 x, Int64 y, Int64 z, UInt16 cubeType, Byte flags, UInt16 value)
            : base(segment, x, y, z, cubeType, flags, value)
        {
            // We'll remove this once we can safely serialize data and store the mode seperately
            if (TerrainData.mEntries[cubeType]?.GetValue(value)?.Key == "APlusMalware.LogicLasers.ThreatLevelSensor")
                _mode = SensorMode.ThreatLevel;
            else
                _mode = SensorMode.Countdown;
        }

        protected override Byte CalculateOutput(SegmentEntity entity, UInt16 data)
        {
            ThreatScanner scanner = entity as ThreatScanner;
            if (scanner == null)
                return 0;
            switch (_mode)
            {
                case SensorMode.Countdown:
                    return (Byte)((1f - MobSpawnManager.mrTDCountDown / 3600f) * 255f);
                case SensorMode.ThreatLevel:
                    return (Byte)MobSpawnManager.mrSmoothedBaseThreat;
            }
            return 0;
        }
    }
}
