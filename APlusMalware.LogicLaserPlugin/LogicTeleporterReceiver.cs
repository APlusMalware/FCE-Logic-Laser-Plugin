using System;

namespace APlusMalware.LogicLaserPlugin
{
    public class LogicTeleporterReceiver : LogicDoubleReceiver
    {
        private Int32 _distance;
        public LogicTeleporterReceiver(Segment segment, Int64 x, Int64 y, Int64 z, UInt16 cubeType, Byte flags, UInt16 value)
            : base(segment, x, y, z, cubeType, flags, value)
        {
        }

        public override String GetPopupText()
        {
            String axis;
            if (TargetXOffset != 0)
                axis = "X";
            else if (TargetYOffset != 0)
                axis = "Y";
            else
                axis = "Z";
            String str = $"Teleport distance on the {axis} axis: {_distance} meters.";
            return base.GetPopupText() + "\n" + str;
        }

        protected override void UpdateTarget(SegmentEntity entity, Byte[] inputValues, Boolean reset)
        {
            Teleporter teleporter = entity as Teleporter;
            ItemLocation marker = teleporter?.mTargetMarker;
            if (marker == null)
                return;
            
            // Left input adjusts 0 to 255, and right input adjusts (-128 to 127) * 256
            Int32 distance = (SByte)inputValues[1] * 256 + inputValues[0];
            _distance = distance;

            if (TargetXOffset != 0)
                marker.mLocX = teleporter.mnX + distance;
            else if (TargetYOffset != 0)
                marker.mLocY = teleporter.mnY + distance;
            else
                marker.mLocZ = teleporter.mnZ + distance;

            teleporter.SwapMarker(marker); // Force the teleporter to update the power costs
        }
    }
}
