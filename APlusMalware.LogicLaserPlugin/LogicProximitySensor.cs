using System;
using System.Linq;

namespace APlusMalware.LogicLaserPlugin
{
    public class LogicProximitySensor : LogicSensor
    {
        private readonly IPlayerSource _playerSource;

        public LogicProximitySensor(Segment segment, Int64 x, Int64 y, Int64 z, UInt16 cubeType, Byte flags, UInt16 value, IPlayerSource playerSource)
            : base(segment, x, y, z, cubeType, flags, value)
        {
            if (playerSource == null)
                throw new ArgumentNullException(nameof(playerSource));

            _playerSource = playerSource;
        }

        public Int32 ActivationDistance { get; } = 3;

        protected override Byte CalculateOutput(SegmentEntity entity, UInt16 data)
        {
            return _playerSource.Players.Min(DistanceToPlayer);
        }

        private Byte DistanceToPlayer(Player player)
        {
            // Get the distances along the values, find the absolute value, and cap them to 255.
            Int32 xDist = (Int32)Math.Min(Math.Abs(player.mnWorldX - mnX), 255);
            Int32 yDist = (Int32)Math.Min(Math.Abs(player.mnWorldY - mnY), 255);
            Int32 zDist = (Int32)Math.Min(Math.Abs(player.mnWorldZ - mnZ), 255);

            if (xDist == 255 || yDist == 255 || zDist == 255)
                return 255;

            Int32 distanceSquared = xDist*xDist + yDist*yDist + zDist*zDist;
            return (Byte)Math.Min(Math.Sqrt(distanceSquared), 255);
        }
    }
}
